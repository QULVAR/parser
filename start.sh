#!/bin/bash

# PKI Parser Project - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
# ============================================

set -e

echo "üöÄ PKI Parser Project - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"
echo "===================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "üìã –°–æ–∑–¥–∞—é .env —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
    cp .env.template .env
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω! –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker Compose
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source .env 2>/dev/null || true

# –í—ã–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É docker-compose
COMPOSE_CMD="docker-compose"
if docker compose version &> /dev/null; then
    COMPOSE_CMD="docker compose"
fi

echo "üî® –°–æ–±–∏—Ä–∞—é Docker –æ–±—Ä–∞–∑—ã..."
$COMPOSE_CMD build

echo "üèÉ‚Äç‚ôÇÔ∏è –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å—ã..."
$COMPOSE_CMD up -d backend frontend

echo "‚è≥ –û–∂–∏–¥–∞—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
$COMPOSE_CMD ps

echo ""
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "  üìÑ –ò–Ω—Ñ–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:${DOCKER_FLUTTER_PORT:-8080}"
echo "  üîå Django API:    http://localhost:${DOCKER_DJANGO_PORT:-8000}"
echo "  üìö Django Admin:  http://localhost:${DOCKER_DJANGO_PORT:-8000}/admin/"
echo ""
echo "üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:      $COMPOSE_CMD down"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:  $COMPOSE_CMD logs -f"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:      $COMPOSE_CMD restart"
echo "  –õ–æ–∫–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä: cd Parse && python main.py"
echo ""
echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:${DOCKER_FLUTTER_PORT:-8080} –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo ""
echo "üì± –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "  –õ–æ–∫–∞–ª—å–Ω–æ: cd parser_app && flutter run -d web-server --release --web-hostname 127.0.0.1 --web-port 5500 --dart-define=FLUTTER_WEB_RENDERER=canvaskit"
echo "  –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5500"
echo ""
echo "üê≥ –î–ª—è Docker —Å–±–æ—Ä–∫–∏ Flutter (–µ—Å–ª–∏ Flutter —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):"
echo "  1. flutter build web --release --web-renderer canvaskit"
echo "  2. docker cp parser_app/build/web/. pki_frontend:/usr/share/nginx/html/"
echo "  3. docker-compose restart frontend"