# =============================================================================
# PKI Parser Project - Environment Variables Template
# =============================================================================
# Скопируйте этот файл в .env и настройте переменные под ваше окружение
# cp .env.template .env

# =============================================================================
# Django Backend Settings
# =============================================================================

# Секретный ключ Django для криптографических подписей
# ВАЖНО: Сгенерируйте уникальный ключ для продакшена!
# Можно сгенерировать тут: https://djecrety.ir/
DJANGO_SECRET_KEY="#wa%^w#5!r1g9_u(woocuweddoz@eftf0=x1s(qzeqd1^@ov-#"

# Режим отладки Django (True для разработки, False для продакшена)
# В продакшене ОБЯЗАТЕЛЬНО установить в False!
DJANGO_DEBUG=True

# Список разрешенных хостов для Django
# Пример: "localhost,127.0.0.1,example.com"
# Для разработки можно оставить пустым, но в продакшене ОБЯЗАТЕЛЬНО указать!
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Порт для Django сервера
DJANGO_PORT=8000

# =============================================================================
# Database Settings
# =============================================================================

# Тип базы данных (sqlite, postgresql, mysql)
# По умолчанию используется SQLite для простоты
DB_ENGINE=django.db.backends.sqlite3

# Для SQLite - путь к файлу базы данных
DB_NAME=db.sqlite3

# Для PostgreSQL/MySQL (раскомментировать если используете):
# DB_HOST=localhost
# DB_PORT=5432
# DB_USER=parser_user
# DB_PASSWORD=your_secure_password

# =============================================================================
# JWT Authentication Settings
# =============================================================================

# Время жизни access токена в минутах
# В коде захардкожено 15 минут - это для безопасности
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=15

# Время жизни refresh токена в днях
# В коде захардкожено 7 дней
JWT_REFRESH_TOKEN_LIFETIME_DAYS=7

# Ротация refresh токенов (True/False)
# Когда True - при обновлении access токена выдается новый refresh токен
JWT_ROTATE_REFRESH_TOKENS=True

# =============================================================================
# CORS Settings
# =============================================================================

# Разрешить CORS запросы от всех доменов (True/False)
# ВНИМАНИЕ: В продакшене установить False и настроить CORS_ALLOWED_ORIGINS!
CORS_ALLOW_ALL_ORIGINS=True

# Список разрешенных доменов для CORS (когда CORS_ALLOW_ALL_ORIGINS=False)
# Пример: "http://localhost:8080,https://yourdomain.com"
# CORS_ALLOWED_ORIGINS=http://localhost:8080

# =============================================================================
# Flutter App Settings
# =============================================================================

# Порт для Flutter web приложения
FLUTTER_WEB_PORT=8080

# URL Django API для Flutter приложения
# В коде Flutter автоопределяется:
# - Web: http://127.0.0.1:8000
# - Android: http://10.0.2.2:8000 (эмулятор)
# - iOS: http://127.0.0.1:8000
API_BASE_URL=http://127.0.0.1:8000

# =============================================================================
# Python Parser Settings  
# =============================================================================

# Путь к Excel файлу для парсинга
PARSER_EXCEL_FILE=output.xlsx

# =============================================================================
# Docker Settings
# =============================================================================

# Внешний порт для Django API в Docker
DOCKER_DJANGO_PORT=8000

# Внешний порт для Flutter Web в Docker  
DOCKER_FLUTTER_PORT=8080

# Внутренняя сеть Docker
DOCKER_NETWORK_NAME=parser_network

# =============================================================================
# Development Settings
# =============================================================================

# Включить подробное логирование (True/False)
VERBOSE_LOGGING=False

# Тайм-аут для HTTP запросов в секундах
HTTP_TIMEOUT=30

# =============================================================================
# Production Settings (для продакшена)
# =============================================================================

# Использовать HTTPS (True/False)
USE_HTTPS=False

# Домен приложения в продакшене
PRODUCTION_DOMAIN=yourdomain.com

# Email настройки (для уведомлений об ошибках в продакшене)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# EMAIL_USE_TLS=True

# =============================================================================
# Security Settings (рекомендуется для продакшена)
# =============================================================================

# Использовать безопасные куки (True для HTTPS)
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# HTTP Strict Transport Security
USE_HSTS=False

# Content Security Policy
CSP_DEFAULT_SRC="'self'"

# =============================================================================
# Комментарии по безопасности:
# =============================================================================
# 1. DJANGO_SECRET_KEY - ОБЯЗАТЕЛЬНО поменяйте в продакшене!
# 2. DJANGO_DEBUG - ОБЯЗАТЕЛЬНО False в продакшене!
# 3. DJANGO_ALLOWED_HOSTS - ОБЯЗАТЕЛЬНО укажите домены в продакшене!
# 4. CORS_ALLOW_ALL_ORIGINS - ОБЯЗАТЕЛЬНО False в продакшене!
# 5. Используйте HTTPS в продакшене
# 6. Настройте базу данных (PostgreSQL) вместо SQLite для продакшена
# 7. Регулярно обновляйте зависимости
# =============================================================================